
<!-- saved from url=(0101)https://stanford-cs221.github.io/autumn2019/lectures/index.html#include=inference-demo.js&example=csp -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <script type="text/javascript" async="" src="./Inference algorithms demo_files/ga.js"></script><script src="./Inference algorithms demo_files/sfig.js"></script>
  <script src="./Inference algorithms demo_files/seedrandom.js"></script>
  <script src="./Inference algorithms demo_files/Graph.js"></script>
  <script src="./Inference algorithms demo_files/RootedTree.js"></script>
  <script src="./Inference algorithms demo_files/Outline.js"></script>
  <script src="./Inference algorithms demo_files/utils.js"></script>
  <script src="./Inference algorithms demo_files/index.js"></script><script src="./Inference algorithms demo_files/inference-demo.js"></script>
<title>Inference algorithms demo</title><script src="./Inference algorithms demo_files/MathJax.js">MathJax.Hub.Config({  jax: ["input/TeX", "output/SVG"],  extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],  tex2jax: {inlineMath: [["$", "$"]]},  TeX: { Macros: {1: ['\\mathbf{1}', 0],white: ['{\\color{rgb(255,255,255)}{#1}}', 1],black: ['{\\color{rgb(0,0,0)}{#1}}', 1],silver: ['{\\color{rgb(192,192,192)}{#1}}', 1],gray: ['{\\color{rgb(128,128,128)}{#1}}', 1],lightgray: ['{\\color{rgb(211,211,211)}{#1}}', 1],darkgray: ['{\\color{rgb(169,169,169)}{#1}}', 1],red: ['{\\color{rgb(255,0,0)}{#1}}', 1],blue: ['{\\color{rgb(0,0,255)}{#1}}', 1],green: ['{\\color{rgb(0,128,0)}{#1}}', 1],lightgreen: ['{\\color{rgb(144,238,144)}{#1}}', 1],darkred: ['{\\color{rgb(139,0,0)}{#1}}', 1],darkblue: ['{\\color{rgb(0,0,160)}{#1}}', 1],lightblue: ['{\\color{rgb(173,216,230)}{#1}}', 1],cyan: ['{\\color{rgb(0,255,255)}{#1}}', 1],orange: ['{\\color{rgb(255,165,0)}{#1}}', 1],purple: ['{\\color{rgb(128,0,128)}{#1}}', 1],brown: ['{\\color{rgb(165,42,42)}{#1}}', 1],yellow: ['{\\color{rgb(255,255,0)}{#1}}', 1],maroon: ['{\\color{rgb(128,0,0)}{#1}}', 1],lime: ['{\\color{rgb(0,255,0)}{#1}}', 1],fuchsia: ['{\\color{rgb(255,0,255)}{#1}}', 1],olive: ['{\\color{rgb(128,128,0)}{#1}}', 1],pink: ['{\\color{rgb(250,175,190)}{#1}}', 1],foo: ['{\\color{rgb(255,0,0)}{#1}}', 1],StartState: ['s_\\text{start}', 0],EndState: ['s_\\text{end}', 0],States: ['\\text{States}', 0],Actions: ['\\text{Actions}', 0],Succ: ['\\text{Succ}', 0],Cost: ['\\text{Cost}', 0],PathCost: ['\\text{PathCost}', 0],FutureCost: ['\\text{FutureCost}', 0],PastCost: ['\\text{PastCost}', 0],LowCost: ['\\text{LowCost}', 0],UpCost: ['\\text{UpCost}', 0],Reward: ['\\text{Reward}', 0],IsTerminal: ['\\text{IsTerminal}', 0],IsEnd: ['\\text{IsEnd}', 0],PathReward: ['\\text{PathReward}', 0],ForwReward: ['\\text{ForwReward}', 0],BackReward: ['\\text{BackReward}', 0],Utility: ['\\text{Utility}', 0],opt: ['\\text{opt}', 0],ValueStart: ['V_{#1, #2}(\\StartState)', 2],Turn: ['\\text{Turn}', 0],Player: ['\\text{Player}', 0],Players: ['\\text{Players}', 0],Eval: ['\\text{Eval}', 0],agent: ['\\text{agent}', 0],nature: ['\\text{nature}', 0],opp: ['\\text{opp}', 0],dice: ['\\text{dice}', 0],coin: ['\\text{coin}', 0],prior: ['\\text{prior}', 0],likelihood: ['\\text{likelihood}', 0],Parents: ['\\text{Parents}', 0],IG: ['\\text{IG}', 0],TrainLoss: ['\\text{TrainLoss}', 0],Loss: ['\\text{Loss}', 0],Error: ['\\text{Error}', 0],Dist: ['\\text{Dist}', 0],sign: ['\\text{sign}', 0],ModifiedCost: ['\\Cost\'', 0],ModifiedPastCost: ['\\PastCost\'', 0],RelaxedCost: ['\\Cost_\\text{rel}', 0],RelaxedFutureCost: ['\\FutureCost_\\text{rel}', 0],RelaxedP: ['P_\\text{rel}', 0],Scope: ['\\text{Scope}', 0],Score: ['\\text{Score}', 0],Weight: ['\\text{Weight}', 0],Domain: ['\\text{Domain}', 0],Domains: ['\\text{Domains}', 0],MarkovBlanket: ['\\text{MarkovBlanket}', 0],true: ['\\text{true}', 0],false: ['\\text{false}', 0],Formulas: ['\\text{Formulas}', 0],KB: ['\\text{KB}', 0],Rules: ['\\text{Rules}', 0],Tell: ['\\text{Tell}', 0],Ask: ['\\text{Ask}', 0],Rain: ['\\text{Rain}', 0],Slippery: ['\\text{Slippery}', 0],Snow: ['\\text{Snow}', 0],Traffic: ['\\text{Traffic}', 0],Wet: ['\\text{Wet}', 0],Weekday: ['\\text{Weekday}', 0],Peaceful: ['\\text{Peaceful}', 0],Careless: ['\\text{Careless}', 0],Accident: ['\\text{Accident}', 0],Student: ['\\text{Student}', 0],Person: ['\\text{Person}', 0],Creative: ['\\text{Creative}', 0],Takes: ['\\text{Takes}', 0],Course: ['\\text{Course}', 0],Knows: ['\\text{Knows}', 0],Believes: ['\\text{Believes}', 0],Covers: ['\\text{Covers}', 0],Concept: ['\\text{Concept}', 0],alice: ['\\text{alice}', 0],bob: ['\\text{bob}', 0],carol: ['\\text{carol}', 0],arithmetic: ['\\text{arithmetic}', 0],Summer: ['\\text{Summer}', 0],Bizzare: ['\\text{Bizzare}', 0],Unify: ['\\text{Unify}', 0],Subst: ['\\text{Subst}', 0],American: ['\\text{American}', 0],Hostile: ['\\text{Hostile}', 0],Weapon: ['\\text{Weapon}', 0],Sells: ['\\text{Sells}', 0],Criminal: ['\\text{Criminal}', 0],Owns: ['\\text{Owns}', 0],Nono: ['\\text{Nono}', 0],Missile: ['\\text{Missile}', 0],West: ['\\text{West}', 0],Brother: ['\\text{Brother}', 0],john: ['\\text{john}', 0],Animal: ['\\text{Animal}', 0],Loves: ['\\text{Loves}', 0],Likes: ['\\text{Likes}', 0],Feeds: ['\\text{Feeds}', 0],Visited: ['\\text{Visited}', 0],Museum: ['\\text{Museum}', 0],Equals: ['\\text{Equals}', 0],Sum: ['\\text{Sum}', 0],Count: ['\\text{Count}', 0],lois: ['\\text{lois}', 0],superman: ['\\text{superman}', 0],CanFly: ['\\text{CanFly}', 0],chicago: ['\\text{chicago}', 0],boston: ['\\text{boston}', 0],hiking: ['\\text{hiking}', 0],swimming: ['\\text{swimming}', 0],Hates: ['\\text{Hates}', 0],geometry: ['\\text{geometry}', 0],Train: ['\\mathcal{D}_\\text{train}', 0],Test: ['\\mathcal{D}_\\text{test}', 0],Validation: ['\\mathcal{D}_\\text{val}', 0],Holdout: ['\\mathcal{D}_\\text{holdout}', 0],Mistakes: ['\\mathcal{D}_\\text{mistakes}', 0],P: ['\\mathbb{P}', 0],R: ['\\mathbb{R}', 0],E: ['\\mathbb{E}', 0],v: ['\\mathbf{v}', 0],V: ['\\mathbf{V}', 0],w: ['\\mathbf{w}', 0],h: ['\\mathbf{h}', 0],sD: ['\\mathcal{D}', 0],sF: ['\\mathcal{F}', 0],sM: ['\\mathcal{M}', 0],sI: ['\\mathcal{I}', 0],sL: ['\\mathcal{L}', 0],ba: ['\\mathbf{a}', 0],bX: ['\\mathbf{X}', 0],bB: ['\\mathbf{B}', 0],phia: ['\\phi_\\text{local}', 0],eqdef: ['\\stackrel{\\text{def}}{=}', 0],independent: ['\\perp\\!\\!\\!\\!\\perp', 0],vR: ['\\color{red}{\\text{R}}', 0],vB: ['\\color{blue}{\\text{B}}', 0],vG: ['\\color{green}{\\text{G}}', 0],vO: ['\\color{orange}{\\text{O}}', 0],vC: ['\\text{c}', 0],vD: ['\\text{d}', 0],nl: ['``\\text{#1}"', 1],ZeroOneLoss: ['\\Loss_{\\text{0-1}}', 0],PerceptronLoss: ['\\Loss_{\\text{perceptron}}', 0],HingeLoss: ['\\Loss_{\\text{hinge}}', 0],LogisticLoss: ['\\Loss_{\\text{logistic}}', 0],SquaredLoss: ['\\Loss_{\\text{squared}}', 0],AbsLoss: ['\\Loss_{\\text{absdev}}', 0],ReconstructionLoss: ['\\Loss_{\\text{kmeans}}', 0],Reg: ['\\text{Penalty}', 0],pr: ['\\text{#1}', 1],o: ['\\textit{o#1}', 1],Veval: ['V_\\text{eval}', 0],hatVeval: ['\\hat V_\\text{eval}', 0],Vexpectimax: ['V_\\text{exptmax}', 0],Vminimax: ['V_\\text{minmax}', 0],Vexpectiminimax: ['V_\\text{exptminmax}', 0],pifixed: ['\\pi_{7}', 0],piexpectimaxfixed: ['\\pi_\\text{exptmax(7)}', 0],pimax: ['\\pi_{\\max}', 0],pimin: ['\\pi_{\\min}', 0],  } }});</script><script src="./Inference algorithms demo_files/MathJax(1).js">MathJax.Hub.Config({  jax: ["input/TeX", "output/SVG"],  extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],  tex2jax: {inlineMath: [["$", "$"]]},  TeX: { Macros: {1: ['\\mathbf{1}', 0],white: ['{\\color{rgb(255,255,255)}{#1}}', 1],black: ['{\\color{rgb(0,0,0)}{#1}}', 1],silver: ['{\\color{rgb(192,192,192)}{#1}}', 1],gray: ['{\\color{rgb(128,128,128)}{#1}}', 1],lightgray: ['{\\color{rgb(211,211,211)}{#1}}', 1],darkgray: ['{\\color{rgb(169,169,169)}{#1}}', 1],red: ['{\\color{rgb(255,0,0)}{#1}}', 1],blue: ['{\\color{rgb(0,0,255)}{#1}}', 1],green: ['{\\color{rgb(0,128,0)}{#1}}', 1],lightgreen: ['{\\color{rgb(144,238,144)}{#1}}', 1],darkred: ['{\\color{rgb(139,0,0)}{#1}}', 1],darkblue: ['{\\color{rgb(0,0,160)}{#1}}', 1],lightblue: ['{\\color{rgb(173,216,230)}{#1}}', 1],cyan: ['{\\color{rgb(0,255,255)}{#1}}', 1],orange: ['{\\color{rgb(255,165,0)}{#1}}', 1],purple: ['{\\color{rgb(128,0,128)}{#1}}', 1],brown: ['{\\color{rgb(165,42,42)}{#1}}', 1],yellow: ['{\\color{rgb(255,255,0)}{#1}}', 1],maroon: ['{\\color{rgb(128,0,0)}{#1}}', 1],lime: ['{\\color{rgb(0,255,0)}{#1}}', 1],fuchsia: ['{\\color{rgb(255,0,255)}{#1}}', 1],olive: ['{\\color{rgb(128,128,0)}{#1}}', 1],pink: ['{\\color{rgb(250,175,190)}{#1}}', 1],foo: ['{\\color{rgb(255,0,0)}{#1}}', 1],StartState: ['s_\\text{start}', 0],EndState: ['s_\\text{end}', 0],States: ['\\text{States}', 0],Actions: ['\\text{Actions}', 0],Succ: ['\\text{Succ}', 0],Cost: ['\\text{Cost}', 0],PathCost: ['\\text{PathCost}', 0],FutureCost: ['\\text{FutureCost}', 0],PastCost: ['\\text{PastCost}', 0],LowCost: ['\\text{LowCost}', 0],UpCost: ['\\text{UpCost}', 0],Reward: ['\\text{Reward}', 0],IsTerminal: ['\\text{IsTerminal}', 0],IsEnd: ['\\text{IsEnd}', 0],PathReward: ['\\text{PathReward}', 0],ForwReward: ['\\text{ForwReward}', 0],BackReward: ['\\text{BackReward}', 0],Utility: ['\\text{Utility}', 0],opt: ['\\text{opt}', 0],ValueStart: ['V_{#1, #2}(\\StartState)', 2],Turn: ['\\text{Turn}', 0],Player: ['\\text{Player}', 0],Players: ['\\text{Players}', 0],Eval: ['\\text{Eval}', 0],agent: ['\\text{agent}', 0],nature: ['\\text{nature}', 0],opp: ['\\text{opp}', 0],dice: ['\\text{dice}', 0],coin: ['\\text{coin}', 0],prior: ['\\text{prior}', 0],likelihood: ['\\text{likelihood}', 0],Parents: ['\\text{Parents}', 0],IG: ['\\text{IG}', 0],TrainLoss: ['\\text{TrainLoss}', 0],Loss: ['\\text{Loss}', 0],Error: ['\\text{Error}', 0],Dist: ['\\text{Dist}', 0],sign: ['\\text{sign}', 0],ModifiedCost: ['\\Cost\'', 0],ModifiedPastCost: ['\\PastCost\'', 0],RelaxedCost: ['\\Cost_\\text{rel}', 0],RelaxedFutureCost: ['\\FutureCost_\\text{rel}', 0],RelaxedP: ['P_\\text{rel}', 0],Scope: ['\\text{Scope}', 0],Score: ['\\text{Score}', 0],Weight: ['\\text{Weight}', 0],Domain: ['\\text{Domain}', 0],Domains: ['\\text{Domains}', 0],MarkovBlanket: ['\\text{MarkovBlanket}', 0],true: ['\\text{true}', 0],false: ['\\text{false}', 0],Formulas: ['\\text{Formulas}', 0],KB: ['\\text{KB}', 0],Rules: ['\\text{Rules}', 0],Tell: ['\\text{Tell}', 0],Ask: ['\\text{Ask}', 0],Rain: ['\\text{Rain}', 0],Slippery: ['\\text{Slippery}', 0],Snow: ['\\text{Snow}', 0],Traffic: ['\\text{Traffic}', 0],Wet: ['\\text{Wet}', 0],Weekday: ['\\text{Weekday}', 0],Peaceful: ['\\text{Peaceful}', 0],Careless: ['\\text{Careless}', 0],Accident: ['\\text{Accident}', 0],Student: ['\\text{Student}', 0],Person: ['\\text{Person}', 0],Creative: ['\\text{Creative}', 0],Takes: ['\\text{Takes}', 0],Course: ['\\text{Course}', 0],Knows: ['\\text{Knows}', 0],Believes: ['\\text{Believes}', 0],Covers: ['\\text{Covers}', 0],Concept: ['\\text{Concept}', 0],alice: ['\\text{alice}', 0],bob: ['\\text{bob}', 0],carol: ['\\text{carol}', 0],arithmetic: ['\\text{arithmetic}', 0],Summer: ['\\text{Summer}', 0],Bizzare: ['\\text{Bizzare}', 0],Unify: ['\\text{Unify}', 0],Subst: ['\\text{Subst}', 0],American: ['\\text{American}', 0],Hostile: ['\\text{Hostile}', 0],Weapon: ['\\text{Weapon}', 0],Sells: ['\\text{Sells}', 0],Criminal: ['\\text{Criminal}', 0],Owns: ['\\text{Owns}', 0],Nono: ['\\text{Nono}', 0],Missile: ['\\text{Missile}', 0],West: ['\\text{West}', 0],Brother: ['\\text{Brother}', 0],john: ['\\text{john}', 0],Animal: ['\\text{Animal}', 0],Loves: ['\\text{Loves}', 0],Likes: ['\\text{Likes}', 0],Feeds: ['\\text{Feeds}', 0],Visited: ['\\text{Visited}', 0],Museum: ['\\text{Museum}', 0],Equals: ['\\text{Equals}', 0],Sum: ['\\text{Sum}', 0],Count: ['\\text{Count}', 0],lois: ['\\text{lois}', 0],superman: ['\\text{superman}', 0],CanFly: ['\\text{CanFly}', 0],chicago: ['\\text{chicago}', 0],boston: ['\\text{boston}', 0],hiking: ['\\text{hiking}', 0],swimming: ['\\text{swimming}', 0],Hates: ['\\text{Hates}', 0],geometry: ['\\text{geometry}', 0],Train: ['\\mathcal{D}_\\text{train}', 0],Test: ['\\mathcal{D}_\\text{test}', 0],Validation: ['\\mathcal{D}_\\text{val}', 0],Holdout: ['\\mathcal{D}_\\text{holdout}', 0],Mistakes: ['\\mathcal{D}_\\text{mistakes}', 0],P: ['\\mathbb{P}', 0],R: ['\\mathbb{R}', 0],E: ['\\mathbb{E}', 0],v: ['\\mathbf{v}', 0],V: ['\\mathbf{V}', 0],w: ['\\mathbf{w}', 0],h: ['\\mathbf{h}', 0],sD: ['\\mathcal{D}', 0],sF: ['\\mathcal{F}', 0],sM: ['\\mathcal{M}', 0],sI: ['\\mathcal{I}', 0],sL: ['\\mathcal{L}', 0],ba: ['\\mathbf{a}', 0],bX: ['\\mathbf{X}', 0],bB: ['\\mathbf{B}', 0],phia: ['\\phi_\\text{local}', 0],eqdef: ['\\stackrel{\\text{def}}{=}', 0],independent: ['\\perp\\!\\!\\!\\!\\perp', 0],vR: ['\\color{red}{\\text{R}}', 0],vB: ['\\color{blue}{\\text{B}}', 0],vG: ['\\color{green}{\\text{G}}', 0],vO: ['\\color{orange}{\\text{O}}', 0],vC: ['\\text{c}', 0],vD: ['\\text{d}', 0],nl: ['``\\text{#1}"', 1],ZeroOneLoss: ['\\Loss_{\\text{0-1}}', 0],PerceptronLoss: ['\\Loss_{\\text{perceptron}}', 0],HingeLoss: ['\\Loss_{\\text{hinge}}', 0],LogisticLoss: ['\\Loss_{\\text{logistic}}', 0],SquaredLoss: ['\\Loss_{\\text{squared}}', 0],AbsLoss: ['\\Loss_{\\text{absdev}}', 0],ReconstructionLoss: ['\\Loss_{\\text{kmeans}}', 0],Reg: ['\\text{Penalty}', 0],pr: ['\\text{#1}', 1],o: ['\\textit{o#1}', 1],Veval: ['V_\\text{eval}', 0],hatVeval: ['\\hat V_\\text{eval}', 0],Vexpectimax: ['V_\\text{exptmax}', 0],Vminimax: ['V_\\text{minmax}', 0],Vexpectiminimax: ['V_\\text{exptminmax}', 0],pifixed: ['\\pi_{7}', 0],piexpectimaxfixed: ['\\pi_\\text{exptmax(7)}', 0],pimax: ['\\pi_{\\max}', 0],pimin: ['\\pi_{\\min}', 0],  } }});</script><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style></head>

<body onload="prez.run()"><div id="MathJax_Message" style="display: none;"></div>

<svg width="1101" height="641" viewBox="-0.5 -0.5 1101 641"><g style="pointer-events: all;"><rect width="1100" height="640" style="stroke: black; fill: none; stroke-width: 1; pointer-events: all;"></rect><g transform="translate(20,20)" style="pointer-events: all;"><g transform="translate(0,0)"><g style="pointer-events: all;"><g transform="translate(0,0)"><g style="pointer-events: all;"><g transform="translate(0,0)"><g style="pointer-events: all;"><g transform="translate(0,0)"><g transform="scale(0.6,0.6)" style="pointer-events: all;"><g transform="translate(0.5,0.5)"><foreignobject width="121" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><b>Examples:</b></div></div></foreignobject></g><g transform="translate(127.5,0.5)"><foreignobject width="60" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[vote]</div></div></foreignobject></g><g transform="translate(193.5,0.5)"><foreignobject width="52" height="29" style="fill: red; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: red;"><div>[csp]</div></div></foreignobject></g><g transform="translate(251.5,0.5)"><foreignobject width="54" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[pair]</div></div></foreignobject></g><g transform="translate(311.5,0.5)"><foreignobject width="72" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[chain]</div></div></foreignobject></g><g transform="translate(389.5,0.5)"><foreignobject width="66" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[track]</div></div></foreignobject></g><g transform="translate(461.5,0.5)"><foreignobject width="74" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[alarm]</div></div></foreignobject></g><g transform="translate(541.5,0.5)"><foreignobject width="61" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[med]</div></div></foreignobject></g><g transform="translate(608.5,0.5)"><foreignobject width="54" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[dep]</div></div></foreignobject></g><g transform="translate(668.5,0.5)"><foreignobject width="72" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[delay]</div></div></foreignobject></g><g transform="translate(746.5,0.5)"><foreignobject width="53" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[mln]</div></div></foreignobject></g><g transform="translate(805.5,0.5)"><foreignobject width="58" height="29" style="fill: blue; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: blue;"><div>[new]</div></div></foreignobject></g></g></g><g transform="translate(0,18)"><g style="pointer-events: all;"><g transform="translate(0.3,0.3)"><foreignobject width="142" height="29" transform="scale(0.6,0.6)" style="fill: none; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><font color="orange">[Background]</font></div></div></foreignobject></g><g transform="translate(96.1,0.3)"><foreignobject width="176" height="29" transform="scale(0.6,0.6)" style="fill: none; stroke-width: 1; pointer-events: all; cursor: pointer;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><font color="orange">[Documentation]</font></div></div></foreignobject></g></g></g><g transform="translate(0.5,36.5)"><foreignobject width="371" height="454" style="fill: none; stroke-width: 1; pointer-events: all;"><textarea spellcheck="false" rows="32" cols="50" style="font-size: 12px; color: black;">// Simple CSP: A &lt;= B &lt;= C
variable('A', [0, 1, 2, 3])
variable('B', [0, 1, 2, 3])
variable('C', [0, 1, 2, 3])

factor('f1', 'A B', function(a, b) {
  return a &lt; b;
})
factor('f2', 'B C', function(b, c) {
  return b &lt; c;
})

// Query variable of interest
query('A')
</textarea></foreignobject></g><g transform="translate(0.5,491.5)"><polyline points="0,0 0,10" style="stroke: black; fill: none; stroke-width: 1; stroke-opacity: 0; fill-opacity: 0; pointer-events: all;"></polyline></g><g transform="translate(278.20001220703125,519.75)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(-278.20001220703125,-17.25)" style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><rect width="278.2" height="35" style="stroke: black; fill: none; stroke-width: 0; pointer-events: all;"></rect></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(10,0)" style="pointer-events: all;"><g transform="translate(0.5,0)" style="pointer-events: all;"><g style="pointer-events: all;"></g></g></g></g></g></g></g></g></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(0,0.5)" style="pointer-events: all;"><g transform="translate(-258.2,-17.25)" style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(27.5,17.25)"><g style="pointer-events: all; cursor: pointer;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(-26.5,-16.25)" style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><rect width="53" height="32.5" rx="10" ry="10" style="stroke: black; fill: lightblue; stroke-width: 2; pointer-events: all;"></rect></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(10,0)" style="pointer-events: all;"><g transform="translate(0.5,0)" style="pointer-events: all;"><g style="pointer-events: all;"></g></g></g></g></g></g></g></g></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(0,0.5)" style="pointer-events: all;"><g transform="translate(-25,-14.5)" style="pointer-events: all;"><foreignobject width="50" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div>Step</div></div></foreignobject></g></g></g></g></g></g></g><g transform="translate(65.3,8.55)"><foreignobject width="321" height="29" transform="scale(0.6,0.6)" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div>(or press ctrl-enter in text box)</div></div></foreignobject></g></g></g></g></g></g></g></g></g></g></g><g transform="translate(538.4,0)"><g transform="scale(0.6,0.6)" style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(0,0)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(0.5,0.5)"><foreignobject width="73" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><font color="darkblue">Query</font>:</div></div></foreignobject></g></g></g></g><g transform="translate(0.5,79)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(70.5,0)"><g style="pointer-events: all;"><g transform="translate(0.5,0.5)"><rect width="25" height="25" style="stroke: black; fill: none; stroke-width: 1; pointer-events: all;"><title>f1:
0 1: 1
0 2: 1
0 3: 1
1 2: 1
1 3: 1
2 3: 1</title></rect></g><g transform="translate(76.5,0.5)"><rect width="25" height="25" style="stroke: black; fill: none; stroke-width: 1; pointer-events: all;"><title>f2:
0 1: 1
0 2: 1
0 3: 1
1 2: 1
1 3: 1
2 3: 1</title></rect></g></g></g><g transform="translate(0,66)"><g style="pointer-events: all;"><g transform="translate(30.5,30.5)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><ellipse rx="30" ry="30" style="stroke: black; fill: white; stroke-width: 1; fill-opacity: 0.5; pointer-events: all;"></ellipse></g></g><g style="pointer-events: all;"><g transform="translate(-8.5,-14.5)" style="pointer-events: all;"><foreignobject width="17" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><font color="blue">A</font></div></div></foreignobject></g></g><title>0 1 2 3</title></g></g><g transform="translate(121.5,30.5)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><ellipse rx="30" ry="30" style="stroke: black; fill: white; stroke-width: 1; fill-opacity: 0.5; pointer-events: all;"></ellipse></g></g><g style="pointer-events: all;"><g transform="translate(-8.5,-14.5)" style="pointer-events: all;"><foreignobject width="17" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><font color="blue">B</font></div></div></foreignobject></g></g><title>0 1 2 3</title></g></g><g transform="translate(212.5,30.5)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><ellipse rx="30" ry="30" style="stroke: black; fill: white; stroke-width: 1; fill-opacity: 0.5; pointer-events: all;"></ellipse></g></g><g style="pointer-events: all;"><g transform="translate(-9,-14.5)" style="pointer-events: all;"><foreignobject width="18" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div><font color="blue">C</font></div></div></foreignobject></g></g><title>0 1 2 3</title></g></g></g></g></g></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(83.5,-5) scale(0.8,0.8)" style="pointer-events: all;"><g transform="translate(-10.5,-29.5)" style="pointer-events: all;"><foreignobject width="21" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div>f1</div></div></foreignobject></g></g></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><line x1="75.06586826347305" y1="25" x2="46.57681242546476" y2="71.17143702780551" style="stroke: black; fill: none; stroke-width: 2; pointer-events: all;"></line></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><line x1="88.68862275449102" y1="25" x2="109.073594038219" y2="69.19460795240227" style="stroke: black; fill: none; stroke-width: 2; pointer-events: all;"></line></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(159.5,-5) scale(0.8,0.8)" style="pointer-events: all;"><g transform="translate(-10.5,-29.5)" style="pointer-events: all;"><foreignobject width="21" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div>f2</div></div></foreignobject></g></g></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><line x1="153.311377245509" y1="25" x2="133.926405961781" y2="69.19460795240227" style="stroke: black; fill: none; stroke-width: 2; pointer-events: all;"></line></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><line x1="166.93413173652695" y1="25" x2="196.42318757453523" y2="71.17143702780551" style="stroke: black; fill: none; stroke-width: 2; pointer-events: all;"></line></g></g></g></g></g></g></g></g></g><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"><g style="pointer-events: all;"></g></g></g></g></g></g><g transform="translate(0,226)"><g style="pointer-events: all;"><g style="pointer-events: all;"><g transform="translate(0.5,0.5)"><foreignobject width="351" height="29" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: red;"><div>No inference algorithm specified!</div></div></foreignobject></g></g></g></g></g></g></g></g></g></g></g></g></g></g><g transform="translate(10,10) scale(0.5,0.5)" style="pointer-events: all;"><g transform="translate(0.5,0.5)" style="pointer-events: all;"><g style="pointer-events: all;"></g></g></g><g transform="translate(10,630) scale(0.5,0.5)" style="pointer-events: all;"><g transform="translate(0.4,-23.6)" style="pointer-events: all;"><foreignobject width="420" height="29" transform="scale(0.8,0.8)" style="fill: none; stroke-width: 1; pointer-events: all;"><div style="display: inline-block; height: auto; width: auto; float: left; font-family: Arial; font-size: 24px; color: black;"><div>CS221 / Autumn 2019 / Liang &amp; Sadigh</div></div></foreignobject></g></g></g></svg></body></html>